name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-central-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Apply Terraform Changes
        run: |
          cd terraform
          terraform apply -auto-approve
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies and build
        run: |
          cd microservices-architect-config-starter-helm-charts/ui-web-app-reactjs
          npm install
          npm run build
        working-directory: microservices-architect-config-starter-helm-charts/ui-web-app-reactjs

      - name: Run tests for each microservice
        run: |
          cd microservices-architect-config-starter-helm-charts/cart-microservice-nodejs
          npm install
          npm test
          cd ../offers-microservice-spring-boot
          ./mvnw test
          cd ../shoes-microservice-spring-boot
          ./mvnw test
          cd ../wishlist-microservice-python
          # Add commands to run tests for Python microservice
        working-directory: microservices-architect-config-starter-helm-charts

      - name: Configure AWS CLI and Deploy to EKS
        run: |
          aws eks update-kubeconfig --name my-cluster --region eu-central-1
          
          # Deploy the microservices
          kubectl apply -f ./microservices-architect-config-starter-helm-charts/cart-microservice-nodejs/cart-helm/templates/
          kubectl apply -f ./microservices-architect-config-starter-helm-charts/offers-microservice-spring-boot/offer-helm/templates/
          kubectl apply -f ./microservices-architect-config-starter-helm-charts/shoes-microservice-spring-boot/shoe-helm/templates/
          kubectl apply -f ./microservices-architect-config-starter-helm-charts/ui-web-app-reactjs/ui-helm/templates/
          kubectl apply -f ./microservices-architect-config-starter-helm-charts/wishlist-microservice-python/wishlist-helm/templates/
          kubectl apply -f ./microservices-architect-config-starter-helm-charts/zuul-api-gateway/zuul-helm/templates/
          
          # Additional steps if needed, such as database migrations, environment configurations, etc.
